{"_id":"~4305510552","_type":"CaseTemplate","_createdBy":"florian@strangebee.com","_updatedBy":"florian@strangebee.com","_createdAt":1670259481024,"_updatedAt":1670521038708,"name":"IRM-3-UnixLinuxIntrusionDetection","displayName":"Unix-Linux Intrusion Detection (CERT-SG IRM3)","titlePrefix":"","description":"This Incident Response Methodology is a cheat sheet dedicated to handlers investigating on a precise security issue.\n\n**WHO SHOULD USE IRM SHEETS?**\n\n- Administrators\n- Security Operation Center\n- CISOs and deputies\n- CERTs (Computer Emergency Response Team)\n\n**Remember: If you face an incident, follow IRM, take notes. Keep calm and contact your business line’s Incident Response team or CERT immediately if needed.**\n\nReferences:\n→ IRM CERT SG: https://github.com/certsocietegenerale/IRM","severity":2,"tags":[],"flag":false,"tlp":2,"pap":2,"tasks":[{"_id":"~3276947656","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038706,"title":"Remediation","group":"default","description":"## OBJECTIVE: TAKE ACTIONS TO REMOVE THE THREAT AND AVOID FUTURE INCIDENTS.\n\n\n**WARNING: ONLY START REMEDIATING ONCE YOU ARE 100% SURE THAT YOU HAVE WELL\nSCOPED UP AND CONTAINED THE PERIMETER - SO AS TO PREVENT THE ATTACKER FROM\nLAUNCHING RETALIATION ACTIONS.**\n\nTemporarily remove all accesses for the involved accounts in the incident and remove malicious files.","status":"Waiting","flag":false,"order":3,"extraData":{}},{"_id":"~3440807944","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038693,"title":"Identification","group":"default","description":"## OBJECTIVE: DETECT THE INCIDENT, DETERMINE ITS SCOPE, AND INVOLVE THE APPROPRIATE PARTIES.\n\n**Unusual Accounts**\n▪ Look for any suspicious entry in /etc/passwd, especially with UID 0. Also check /etc/group and /etc/shadow.\n▪ Look for orphaned files, which could have been left by a deleted account used in the attack:\n\n```\n# find / \\( --nouser -o --nogroup \\) --print\n\n```\n---\n**Unusual Files**\n▪ Look for all SUID and GUID files:\n\n```\n# find / -uid 0 \\( --perm -4000 -o --perm 2000 \\) --print\n```\n\n▪ Look for weird file names, starting with “. “ or “.. “ or “ “ :\n\n```\n# find / --name “ *“ –print\n# find / --name “. *“ –print\n# find / --name “.. *“ --print\n```\n\n▪ Look for large files (here: larger than 10MB)\n\n```\n# find / -size +10MB --print\n```\n\n▪ Look for processes running from or to files which have been unlinked:\n\n```\n# lsof +L1\n```\n\n▪ Look for unusual files in /proc and /tmp. This last directory is a place of choice for hackers to store data or malicious binaries.\n\n---\n**Unusual Services**\n\nRun chkconfig (if installed) to check for all enabled services:\n\n```\n# chkconfig --list\n```\n\nLook at the running processes (remember: a rootkit might change your results for everything in this paper, especially here!).\n\n```\n# ps –aux\n```\n\nUse lsof -p [pid] on unknown processes\n\n> You should know your usual running processes and be able to figure out which processes could have been added by a hacker. Pay special attention to the processes running under UID 0.\n\n---\n**Unusual Network Activity**\n- Try to detect sniffers on the network using several ways:\n  - Look at your kernel log files for interfaces entering promiscuous mode such as : “kernel: device eth0 entered promiscuous mode”\n  - Use # ip link to detect the “PROMISC” flag.\n- Look for unusual port activity:\n\n```\n# netstat -nap\n# lsof –i\n```\n- Look for unusual MAC entries in your LAN:\n```\n# arp -a\n```\n- Look for unexpected or new IP addresses on the network:\n\n```\n# netstat -ntaupe\n# netstat -ant\n# watch ss -tt\n```\n---\n**Unusual Automated Tasks**\n▪ Look for unusual jobs scheduled by users mentioned in /etc/cron.allow. Pay a special attention to the cron jobs scheduled by UID 0 accounts (root):\n```\n# crontab -u root -l\n```\n▪ Look for unusual system-wide cron jobs:\n```\n# cat /etc/crontab\n# ls –la /etc/cron.*\n```\n---\n**Unusual Log Entries**\nLook through the log files on the system for suspicious events, including the following:\n▪ Huge number of authentication/login failures from local or remote access tools (sshd,ftpd,etc.)\n▪ Remote Procedure Call (RPC) programs with a log entry that includes a large number of strange\ncharacters …)\n▪ A huge number of Apache logs mentioning “error”\n▪ Reboots (Hardware reboot)\n▪ Restart of applications (Software reboot)\n\n\nAlmost all log files are located under /var/log directory in most Linux distributions. Here are the main ones (paths may vary according to distributions):\n▪ /var/log/message: General message and system related stuff\n▪ /var/log/auth.log: Authentication logs\n▪ /var/log/kern.log: Kernel logs\n▪ /var/log/cron.log: Crond logs (cron job)\n▪ /var/log/maillog: Mail server logs\n▪ /var/log/httpd/: Apache access and error logs directory\n▪ /var/log/boot.log: System boot log\n▪ /var/log/mysqld.log: MySQL database server log file\n▪ /var/log/secure: Authentication log\n▪ /var/log/utmp or /var/log/wtmp: Login records file\n▪ /var/log/syslog: cron, samba activity and more\n▪ /root/.*history: Root user command history\n▪ /home/*/.*history: Users’ command history\n\nTo look through the log files, tools like cat and grep may be useful:\n```\n# cat /var/log/httpd/access.log | grep \"GET /signup.jsp\"\n```\n---\n**Unusual Kernel log Entries**\n▪ Look through the kernel log files on the system for suspicious events:\n\n```\n# dmesg\n```\nList all important kernel and system information:\n```\n# lsmod\n# lspci\n```\n▪ Look for known rootkit (use rkhunter and such tools)\n\n---\n**File hashes**\nVerify all MD5 hashes of your binaries in /bin, /sbin, /usr/bin, /usr/sbin or any other related binary storing place. (use AIDE or such tool)\n\n**WARNING: this operation will probably change all file timestamps. This should only be done after all other investigations are done and you feel like you can alter these data.**\n\n▪ On systems with RPM installed, use:\n\n```\n# rpm –Va | sort\n```\n\n▪ On some Linux, a script named check-packages can be used.\n▪ On Solaris:\n\n```\n# pkg_chk –vn\n```\n\n▪ On Debian:\n\n```\n# debsums –ac\n```\n\n▪ On Openbsd (not really this but a way):\n\n```\n# pkg_delete -vnx\n```","status":"Waiting","flag":false,"order":1,"extraData":{}},{"_id":"~3440812040","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038707,"title":"Recovery","group":"default","description":"## OBJECTIVE: RESTORE THE SYSTEM TO NORMAL OPERATIONS.\n\nNo matter how far the attacker has gone into the system and the knowledge you might have about the compromise, as long as the system has been compromised, the best practice is **to reinstall the system completely and apply all security fixes.**\n\nIn case this solution can’t be applied, you should:\n▪ Change all the system’s accounts passwords and make your users do so in a secure way\n▪ Check the integrity of the whole data stored on the system, using file hashes (i.e. SHA256)\n▪ Restore all binaries which could have been changed (Example: /bin/su)\n▪ Replace all compromised packages with safe ones","status":"Waiting","flag":false,"order":4,"extraData":{}},{"_id":"~3481755768","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038708,"title":"Lessons learned","group":"default","description":"**OBJECTIVE: DOCUMENT THE INCIDENT’S DETAILS, DISCUSS LESSONS LEARNED, AND ADJUST PLANS AND DEFENSES.**\n\n---\n**Report**\nA crisis report should be written and made available to all of the actors of the crisis management cell.\nThe following themes should be described:\n▪ Initial detection\n▪ Actions and timelines\n▪ What went right\n▪ What went wrong\n▪ Incident cost\n▪ Indicators of compromise\n\n---\n**Capitalize**\nActions to improve the Unix/Linux intrusion detection management processes should be defined to\ncapitalize on this experience.\n\n---\n**Lessons learned**\nActions to improve the Unix/Linux intrusion detection management processes should be defined to\ncapitalize on this experience.","status":"Waiting","flag":false,"order":5,"extraData":{}},{"_id":"~3727548584","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038706,"title":"Containment","group":"default","description":"## OBJECTIVE: MITIGATE THE ATTACK’S EFFECTS ON THE TARGETED ENVIRONMENT.\n\n▪ Securely backup important data from the compromised machine, if possible, using a bit-by-bit\nphysical copy of the whole hard disk on an external support. Also make a copy of the memory (RAM) of\nthe system, which will be investigated if necessary.\n▪ Isolate with the EDR and inspect other computers and networks.\n\n**Or**\n\n▪ Isolate with the firewall or switches.\n\n> If the machine is not considered critical for the company and can be disconnected, shut the machine down the hard way, removing its power plug. If it is a laptop with a battery on, just push the “off” button for some seconds until the computer switches off.\n\n**Offline investigations should be started right away if the identification step didn’t give any result, but the system is still suspected of being compromised.**\n\nTry to find evidences of every action of the attacker: (using forensic tools like Sleuth Kit/Autopsy for\nexample)\n▪ Find all files used by the attacker, including deleted files and see what has been done with them or at\nleast their functionality to evaluate the threat.\n▪ Check all files accessed recently.\n▪ Check log files.\n▪ More generally, try to find how the attacker got into the system. All leads should be considered. If no\ncomputer proof of the intrusion is found, never forget it could come from an insider.\n▪ Apply fixes when applicable, to prevent the same kind of intrusion, in case the attacker used a known\nfixed vulnerability.","status":"Waiting","flag":false,"order":2,"extraData":{}},{"_id":"~4792516696","_type":"Task","_createdBy":"florian@strangebee.com","_createdAt":1670521038690,"title":"Preparation","group":"default","description":"## OBJECTIVE: ESTABLISH CONTACTS, DEFINE PROCEDURES, GATHER INFORMATION TO SAVE TIME DURING AN INCIDENT.\n\n**Deploy an EDR solution on endpoints and servers**\n▪ This tool became one of the cornerstones of the incident response in case of ransomware or in large scale compromise, facilitating identification, containment, and remediation phases.\n▪ Launch EDR Search and AV scan with IOC explicit rules and get first indicators for remediation progress following.\n▪ Set your EDR policies in prevent mode.\n\n> In absence of EDR, a physical access to the suspicious system should be given to the forensic investigator. Physical access is preferred to remote access, since the hacker could detect the investigations done on the system (by using a network sniffer for example).\n\nA **physical access to the suspicious system** should be offered to the forensic investigator.\n\nA **physical copy of the hard-disk** might be necessary for forensic and evidence purposes. If needed, a physical access could be necessary to disconnect the suspected machine from any network.\n\nA good **knowledge of the usual network activity of the machine/server is needed**. You should have a file on a secure place describing the usual port activity, to compare efficiently to the current state.\n\nA good **knowledge of the usual services is needed**. Don’t hesitate to ask a Unix/Linux Expert for his assistance, when applicable.\n▪ Use Auditd and Linux Logs like system, message, and applications logs (Apache, NGINX, …)\n▪ Use AppArmor for example\n\nYou should have a **regularly updated list of all critical files**, (especially SUID and GUID files) stored in a secure place out of the network or even on paper. With this list, you can easily separate usual SUID files and detect unusual ones.\nHave a **map of your usual port activity/traffic rules.**","status":"Waiting","flag":false,"order":0,"extraData":{}}]}